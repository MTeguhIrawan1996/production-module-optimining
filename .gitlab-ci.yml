include: '.gitlab-ci/node.yml'

variables:
  GIT_STRATEGY: fetch
  GIT_CLEAN_FLAGS: -ffdx -e node_modules/ -e .npm/ -e .yarn/

dev:
  extends: .yarn # or .npm
  stage: deploy
  only:
    - dev
  script:
    - rm -f .env && ln -s .gitlab-ci/dev.env .env
    - rm -f ecosystem.config.js && ln -s .gitlab-ci/dev.ecosystem.config.js ecosystem.config.js
    - bash .gitlab-ci/dev.script.sh
    - pm2 restart ecosystem.config.js
  after_script:
    - pm2 save
  tags:
    - ns1.optimap.id-dev01-ssh

rc:
  variables:
    GIT_CLONE_PATH: $CI_BUILDS_DIR/rc/$CI_CONCURRENT_ID/$CI_PROJECT_PATH
  extends: .yarn
  stage: deploy
  only:
    - rc
  script:
    - rm -f .env && ln -s .gitlab-ci/rc.env .env
    - rm -f ecosystem.config.js && ln -s .gitlab-ci/rc.ecosystem.config.js ecosystem.config.js
    - bash .gitlab-ci/dev.script.sh
    - pm2 restart ecosystem.config.js
  after_script:
    - pm2 save
  tags:
    - ns1.optimap.id-dev01-ssh

bsa:
  variables:
    GIT_CLONE_PATH: $CI_BUILDS_DIR/bsa/$CI_CONCURRENT_ID/$CI_PROJECT_PATH
  extends: .yarn
  stage: deploy
  only:
    - bsa
  script:
    - rm -f .env && ln -s .gitlab-ci/bsa.env .env
    - rm -f ecosystem.config.js && ln -s .gitlab-ci/bsa.ecosystem.config.js ecosystem.config.js
    - bash .gitlab-ci/dev.script.sh
    - pm2 restart ecosystem.config.js
  after_script:
    - pm2 save
  tags:
    - ns1.optimap.id-dev01-ssh

# preview:
#   image: node:18.6.0-slim
#   variables:
#     VERCEL_TOKEN: ...
#     VERCEL_PROJECT: ...
#   stage: deploy
#   only:
#     - preview
#   script:
#     - npm install --global vercel
#     - vercel link --token=$VERCEL_TOKEN --project=$VERCEL_PROJECT --yes
#     - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
#     - vercel build --token=$VERCEL_TOKEN
#     - vercel deploy --token=$VERCEL_TOKEN --prod
